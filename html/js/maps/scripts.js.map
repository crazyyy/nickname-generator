{"version":3,"sources":["scripts.js"],"names":["randomBetween","min","max","Math","random","abs","method","noop","methods","length","console","window","request","XMLHttpRequest","onload","logins","needLogins","fileContent","this","responseText","fileContentLines","split","i","randomLineIndex","floor","randomLine","replace","addNubmer","parseInt","match","document","getElementById","innerHTML","open","send"],"mappings":"AAoEA,QAASA,eAAcC,EAAKC,GAC1B,MAAU,GAAND,EACKA,EAAME,KAAKC,UAAYD,KAAKE,IAAIJ,GAAKC,GAErCD,EAAME,KAAKC,SAAWF,GAvEhC,WAOC,IANA,GAAII,GACAC,EAAO,aACPC,GAAW,SAAU,QAAS,QAAS,QAAS,MAAO,SAAU,QAAS,YAAa,QAAS,iBAAkB,WAAY,OAAQ,MAAO,eAAgB,UAAW,aAAc,QAAS,OAAQ,UAAW,WAAY,cAAe,YAAa,QAAS,QACnQC,EAASD,EAAQC,OACjBC,EAAWC,OAAOD,QAAUC,OAAOD,YAEhCD,KACLH,EAASE,EAAQC,GAGZC,EAAQJ,KACTI,EAAQJ,GAAUC,KAK1B,IAAIK,SAAU,GAAIC,eAClBD,SAAQE,OAAS,WACf,GAAIC,GAAS,GACTC,EAAa,GAGbC,EAAcC,KAAKC,aAEnBC,EAAmBH,EAAYI,MAAO,KAE1C,KAAMC,EAAE,EAAGA,GAAKN,EAAYM,IAAK,CAE/B,GAAIC,GAAkBpB,KAAKqB,MAAOrB,KAAKC,SAAWgB,EAAiBX,QAE/DgB,EAAaL,EAAkBG,EACnCE,GAAaA,EAAWC,QAAQ,OAAQ,IACxCD,EAAaA,EAAWC,QAAQ,WAAY,GAC5C,IAAIC,GAAYC,SAAS5B,cAAc,GAAG,IACtCyB,GAAWhB,OAAS,GACtBgB,GAA0BE,EAC1BF,EAAaA,EAAWC,QAAQ,WAAY,KAGjCD,EAAWI,MAAM,SAC5BJ,GAA0BE,EAC1BF,EAAaA,EAAWC,QAAQ,WAAY,MAG5CD,EAAaA,EACbA,GAA0BE,EAC1BF,EAAaA,EAAWC,QAAQ,WAAY,KAI1CD,EAAWhB,OAAS,EACtBa,GAAQ,EAERP,EAASA,EAAS,MAAQU,EAAa,SAO3CK,SAASC,eAAgB,oBAAqBC,UAAYjB,GAE5DH,QAAQqB,KAAM,MAAO,cAAc,GACnCrB,QAAQsB","file":"scripts.js","sourcesContent":["// Avoid `console` errors in browsers that lack a console.\n(function () {\n  var method;\n  var noop = function () {};\n  var methods = ['assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error', 'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log', 'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd', 'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'];\n  var length = methods.length;\n  var console = (window.console = window.console || {});\n\n  while (length--) {\n    method = methods[length];\n\n    // Only stub undefined methods.\n    if (!console[method]) {\n        console[method] = noop;\n    }\n}\n}());\n\nvar request = new XMLHttpRequest();\nrequest.onload = function() {\n  var logins = '';\n  var needLogins = 10;\n\n  // get the file contents\n  var fileContent = this.responseText;\n  // split into lines\n  var fileContentLines = fileContent.split( '\\n' );\n\n  for ( i=0; i <= needLogins; i++) {\n    // get a random index (line number)\n    var randomLineIndex = Math.floor( Math.random() * fileContentLines.length );\n    // extract the value\n    var randomLine = fileContentLines[ randomLineIndex ];\n    randomLine = randomLine.replace(/\\s/gi, '');\n    randomLine = randomLine.replace(/\\d\\d\\d/gi, '');\n    var addNubmer = parseInt(randomBetween(10,99));\n    if (randomLine.length < 7 ){\n      randomLine = randomLine + addNubmer;\n      randomLine = randomLine.replace(/\\d\\d\\d/gi, '');\n\n\n    } else if (  randomLine.match(/\\d+/g)  )  {\n      randomLine = randomLine + addNubmer;\n      randomLine = randomLine.replace(/\\d\\d\\d/gi, '');\n\n    } else {\n      randomLine = randomLine;\n      randomLine = randomLine + addNubmer;\n      randomLine = randomLine.replace(/\\d\\d\\d/gi, '');\n\n    }\n\n    if (randomLine.length < 7 ) {\n      i = i - 1;\n    } else {\n      logins = logins + '3: ' + randomLine + '<br />';\n    }\n  }\n\n\n\n  // add the random line in a div\n  document.getElementById( 'random-nicknames' ).innerHTML = logins;\n};\nrequest.open( 'GET', 'sorces.txt', true );\nrequest.send();\n\n\nfunction randomBetween(min, max) {\n  if (min < 0) {\n    return min + Math.random() * (Math.abs(min)+max);\n  } else {\n    return min + Math.random() * max;\n  }\n}\n"],"sourceRoot":"/source/"}